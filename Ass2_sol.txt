Section_1
2.	Create an empty directory ‘Assignments’ & cd to ‘Assignments’.
$ mkdir Assignments

3.	Create a file README.txt inside ‘Assignments’ & write few lines about the contents of ‘Assignments’ folder.
$ touch README.txt

4.	Commit README.txt file.
$ git init
$ git add .
$ git commit -m "README.txt file"

5.	Now create a new branch ‘html-assignments’.
$ git branch html-assignments

6.	Switch to ‘html-assignments’ branch.
$ git checkout html-assignments

8.	Commit HTML assignments into ‘html-assignments’ branch.
$ git add .
$ git commit -m "html assignment firstly"

10.	Commit those changed files.
$ git add .
$ git commit -m "html assignment Secondly"

11.	Switch to master branch.
$ git checkout master

12.	Make minor changes into README.txt file & commit those changes into master.
$ vi README.txt
$ git commit -am "updated README.txt file"

13.	Again switch to ‘html-assignments’ branch.
$ git branch html-assignments

15.	Commit those changes.
$ git commit -am "updated in html-assignments pizza"

16.	Switch to master.
$ git checkout master

17.	Merge ‘html-assignments’ branch into master. Confirm all html assignments are shown in master.
$ git merge html-assignments

18.	Finally delete the ‘html-assignments’ branch.
$ git branch -d html-assignments

SECTION-2 - (CSS assignments) 

1.	Create a new branch ‘css-assignments’.
$ git branch css-assignments

2.	Switch to ‘css-assignments’ branch.
$ git checkout css-assignments

4.	Commit CSS assignments into ‘css-assignments’ branch.
$ git add .
$ git commit -m "css-assignment commit firstly"

5.	Make minor changes into README.txt file on line 1 belonging to ‘css-assignments’ branch.
$ vi README.txt

6.	Commit those changed files.
$ git commit -am "README.txt file commited"

7.	Switch to master branch.
$ git checkout master

8.	Make minor changes into README.txt file on line 3 & commit those changes into master.

$ vi README.txt
$ git commit -am "commit the README.txt file"

9.	Again switch to ‘css-assignments’ branch.
$ git checkout css-assignments

10.	Make minor changes into few files belonging to ‘css-assignments’ branch.
$ vi index1.html

11.	Commit those changes.
$ git commit -am "commited html file changes from css-assignments"

12.	Switch to master.
$ git checkout master
13.	Merge ‘css-assignments’ branch into master. Confirm all css assignments are shown in master.
$ git merge css-assignments

14.	Finally delete the ‘css-assignments’ branch.
$ git branch -d css-assignments

SECTION-3 - (JavaScript assignments)

1.	Create a new branch ‘js-assignments’.
$ git branch js-assignments

2.	Switch to ‘js-assignments’ branch.
$ git checkout js-assignments

3.	Copy all JavaScript assignments inside ‘Assignments’ folder.
4.	Commit JavaScript assignments into ‘js-assignments’ branch.
$ git add .
$ git commit -m "added js file in js assignment branch"

5.	Make minor changes into README.txt file on line 1 belonging to ‘js-assignments’ branch.
6.	Commit those changed files.
$ git commit -am "changed README.txt file in js-assignments"

7.	Switch to master branch.
$ git checkout master

8.	Make minor changes into README.txt file on line 1 & commit those changes into master.
$ git commit -am "changed README.txt in master branch"

9.	Again switch to ‘js-assignments’ branch.
$ git checkout js-assignments

10.	Make minor changes into few files belonging to ‘js-assignments’ branch.
11.	Commit those changes.
$ git commit -am "chaged home.html file in js-assignments"

12.	Switch to master.
$ git checkout master

13.	Merge ‘js-assignments’ branch into master. Confirm all JavaScript assignments are shown in master.
$ git commit -am "final commit"

14.	Finally delete the ‘js-assignments’ branch.
$ git branch -d js-assignments


